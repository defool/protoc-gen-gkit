package main

type Config struct {
	Package  string
	Services []ServiceInfo
}

type ServiceInfo struct {
	ServiceName      string
	ServiceNameLower string
}

var outTemplate = `// Code generated by protoc-gen-gkit. DO NOT EDIT.
package {{ .Package }}

import (
	"context"

	"github.com/grpc-ecosystem/grpc-gateway/v2/runtime"
	"google.golang.org/grpc"
)
{{ range .Services }}
type {{ .ServiceNameLower }}Registrar interface {
	grpc.ServiceRegistrar
	GetGatewayInfo(desc *grpc.ServiceDesc, imp interface{}) (context.Context, *runtime.ServeMux, grpc.ClientConnInterface)
}

// Register{{ .ServiceName }} register implementation of grpc and grpc-gateway
func Register{{ .ServiceName }}(s {{ .ServiceNameLower }}Registrar, srv {{ .ServiceName }}Server) {
	s.RegisterService(&{{ .ServiceName }}_ServiceDesc, srv)
	ctx, runtime, conn := s.GetGatewayInfo(&{{ .ServiceName }}_ServiceDesc, srv)
	client := New{{ .ServiceName }}Client(conn)
	Register{{ .ServiceName }}HandlerClient(ctx, runtime, client)
}
{{ end }}
`
